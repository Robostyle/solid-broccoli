(defpoll    panel_clock :interval '5s' `date '+%H:%M  |  %A %d %b'`)

(defvar     workspaces      '{}')
(defvar     battery         '{"available": false}')

(defwindow example
  :monitor 1
  :stacking 'fg'
  :exclusive true
  :geometry (geometry :width '100%'
                      :height '1%'
                      :anchor 'top center')(bar))

(defwidget bar [] (centerbox :class 'bar'
    (box
      :class 'left_modules'
      :space-evenly false
      :halign 'start'
      (panel_workspaces)
    )
    (box
      :class 'center_modules'
      :space-evenly false
      :halign 'center'
      (panel_title)
    ) 
    (box
      :class 'right_modules'
      :space-evenly false
      :halign 'end'
      (panel_system_indicators)
      (panel_clock)
      (panel_powermenu)
    )
))

(defwidget center []
  (box :orientation 'h'
       :space-evenly false
       :halign 'center'
       :class 'center_modules'
    ))

(defwidget right []
  (box :orientation 'h'
       :space-evenly false
       :halign 'end'
       :class 'right_modules'
    (box
        :class 'righBar'
        :space-evenly false
        :halign 'end'
      )))

(defwidget panel_system_indicators [] (box :class 'button-bin'
    (eventbox
        :onclick '${EWW_CONFIG_DIR}/scripts/launcher toggle_menu quicksettings'
        :class 'button system-indicators'
        (panel_controls)
    )
))

(defwidget controls_icon [control reveal value icon style visible] (eventbox
    :visible visible
    :onhover '${EWW_CMD} update ${control}_reveal=true'
    :onhoverlost '${EWW_CMD} update ${control}_reveal=false'
    (box
        :space-evenly false
        (revealer
            :duration '300ms'
            :reveal reveal
            :class 'reveal'
            (label
                :class '${style} ${control}'
                :text value)
        )
        (label
            :class '${style} ${control} icon'
            :text icon)
    )
))

(defwidget panel_powermenu [] 
  (box :class 'button-bin powermenu'
    (button
      :class 'button powermenu'
      :onclick '${EWW_CONFIG_DIR}/scripts/launcher toggle_menu powermenu'
    (label :class 'icon' :text ''))))

(defwidget panel_clock [] (box :class 'button-bin'
    (button
        :onclick '${EWW_CONFIG_DIR}/scripts/launcher toggle_menu calendar'
        :class 'button clock'
        (label  :text panel_clock)
    )
))

(defvar battery_reveal false)

(defwidget panel_controls [] (box
    :class 'controls'
    :space-evenly false
    (box
      (label :class "volume icon" :text "󰕾")
    )
    (box :visible {battery.available}
      (label :class 'battery icon' :text {battery.icon} :style {battery.state})
    )
))

(defwidget panel_title [] (box
    :class 'title'
    :visible {workspaces.activeWindow != 'null'}
  (label :text "${workspaces.activeWindow.title}")
))

(defwidget panel_workspaces [] (box :class 'monitors' :space-evenly false
    (for monitor in {workspaces.monitors}
        (box :class 'button-bin'
            (eventbox :class 'button workspaces'
                (box :space-evenly false
                    (label :text '${monitor.name}: ')
                    (for workspace in {monitor.workspaces}
                        (button
                            :class 'workspace-btn ${workspace.id == workspaces.active ? 'active' : ''} ${workspace.windows > 0 ? 'occupied' : 'empty'}'
                            :onclick 'hyprctl dispatch workspace ${workspace.id}'
                            :valign 'center'
                            (label :class 'icon' :text {workspace.windows > 0 ? '${workspace.id == workspaces.active ? '' : ''}' : ''})
                        )
                    )
                )
            )
        )
    )
))

